<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <!-- MyBatis begin -->
    <!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer_write" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.foundation.dao.modules.write"/>
        <property name="annotationClass" value="com.foundation.common.persistence.annotation.MyBatisRepository"/>
    </bean>

    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
    <bean id="mapperScannerConfigurer_read" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.foundation.dao.modules.read" />
        <property name="annotationClass" value="com.foundation.common.persistence.annotation.MyBatisRepository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_read" />
    </bean>
    <!-- 数据源配置,数据库连接池 -->
    <bean id="dataSource" class="com.foundation.dao.util.DecryptDruidSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${jdbc.driver}"/>

        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.write.url}"/>
        <property name="username" value="${jdbc.write.username}"/>
        <property name="password" value="${jdbc.write.password}"/>
        <!--config.decrypt=true 用户名密码加密-->
        <property name="filters" value="config" />
        <property name="connectionProperties" value="config.decrypt=true" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 检测sql语句是否正确 -->
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="6000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
        <!-- 监控数据库 -->
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!-- <property name="filters" value="stat" /> -->
        <!--<property name="filters" value="mergeStat"/>-->
    </bean>



    <!-- 读库数据源配置,数据库连接池 -->
    <bean id="dataSource_readOnly" class="com.foundation.dao.util.DecryptDruidSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.read.url}"/>
        <property name="username" value="${jdbc.read.username}"/>
        <property name="password" value="${jdbc.read.password}"/>

        <!--config.decrypt=true 用户名密码加密-->
        <property name="filters" value="config" />
        <property name="connectionProperties" value="config.decrypt=true" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 检测sql语句是否正确 -->
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="6000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
        <!-- 监控数据库 -->
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!-- <property name="filters" value="stat" /> -->
        <!--<property name="filters" value="mergeStat"/>-->
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.foundation.dao.entity"/>
        <property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml"/>
        <property name="configLocation" value="classpath:mybatis_config.xml"></property>
    </bean>


    <!-- read only  -->
    <bean id="sqlSessionFactory_read" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_readOnly" />
        <property name="typeAliasesPackage" value="com.foundation.dao.entity"></property>
        <property name="mapperLocations" value="classpath:mapper/**/*MapperR.xml"></property>
        <property name="configLocation" value="classpath:mybatis_config.xml"></property>

    </bean>
	<!-- 注解扫描会报错，暂时屏蔽，后期解决 -->
    <!-- 定义事务 -->
    <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> -->
    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> -->
    <!-- MyBatis end -->
</beans>